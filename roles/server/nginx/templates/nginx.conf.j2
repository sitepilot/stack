# {{ ansible_managed }}
user www-data;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

worker_processes auto;
worker_rlimit_nofile 8192;

events {
    worker_connections 8000;
    multi_accept       on;
}

http {
    server_names_hash_bucket_size 128;

    # HTTP
    sendfile      on;
    tcp_nopush    on;
    tcp_nodelay   on;
    server_tokens off;

    # Limits
    keepalive_timeout     15;
    client_body_timeout   30;
    client_header_timeout 30;
    send_timeout          30;
    client_max_body_size  1G;

    # DNS
    resolver {{ ansible_lxdbr0.ipv4.address }};

{% if nginx_ssl_cert and nginx_ssl_key %}
    # SSL
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_certificate     /etc/nginx/ssl.crt;
    ssl_certificate_key /etc/nginx/ssl.key;
{% endif %}

    real_ip_recursive on;
    real_ip_header X-Forwarded-For;
{% for ip in nginx_real_ip_from %}
    set_real_ip_from {{ ip }};
{% endfor %}

    map $http_x_forwarded_proto $proxy_forwarded_proto {
        default $http_x_forwarded_proto;
        ''      $scheme;
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
{% if nginx_ssl_cert and nginx_ssl_key %}
        listen      443 http2 ssl default_server;
        listen      [::]:443 http2 ssl default_server;
{% endif %}

        server_name _;

        return 444;
    }

    server {
        listen      80;
        listen      [::]:80;
{% if nginx_ssl_cert and nginx_ssl_key %}
        listen      443 http2 ssl;
        listen      [::]:443 http2 ssl;
{% endif %}

        server_name ~^(?<name>[\w-]+)\.{{ nginx_domain | replace('.', '\.') }}$;

        location / {
            proxy_pass        http://$name;
            proxy_redirect    off;
            proxy_buffering   off;
            proxy_buffer_size 128k;
            proxy_buffers 100 128k;
            proxy_set_header  Host $host;
            proxy_set_header  X-Real-IP $remote_addr;
            proxy_set_header  X-Forwarded-For $remote_addr;
            proxy_set_header  X-Forwarded-Proto $proxy_forwarded_proto;
        }
    }
}

stream {
    resolver {{ ansible_lxdbr0.ipv4.address }};

{% for stream in nginx_streams %}
    map "" ${{ stream.container | replace('-', '_') }}_{{ stream.port }} {
        default {{ stream.container }}:{{ stream.port }};
    }

    server {
        listen {{ stream.host_port }};
        proxy_pass ${{ stream.container | replace('-', '_') }}_{{ stream.port }};
    }

{% endfor %}
}