---
- name: Validate variables.
  ansible.builtin.assert:
    that:
      - wp_url | length > 0
      - wp_user | length > 0
      - wp_password | length > 0

- name: Check if WordPress is already installed.
  ansible.builtin.stat:
    path: "{{ wp_path }}/wp-load.php"
  register: wordpress_installed

- name: Download WordPress core.
  ansible.builtin.command: "{{ wpcli_path }} core download"
  args:
    chdir: "{{ wp_path }}"
  register: result
  changed_when: "'Success' in result.stdout"
  when: not wordpress_installed.stat.exists

- name: Check if WordPress is already configured.
  ansible.builtin.stat:
    path: "{{ wp_path }}/wp-config.php"
  register: wordpress_config

- name: Configure WordPress.
  ansible.builtin.command: "{{ wpcli_path }} config create
      --dbname='{{ wp_db_name }}' --dbhost='{{ wp_db_host }}'
      --dbuser='{{ wp_db_user }}' --dbpass='{{ wp_db_password }}'"
  args:
    chdir: "{{ wp_path }}"
  register: result
  changed_when: "'Success' in result.stdout"
  when: not wordpress_config.stat.exists

- name: Install WordPress.
  ansible.builtin.command: "{{ wpcli_path }} core install
    --url='{{ wp_url }}' --title='{{ wp_title }}'
    --admin_user='{{ wp_user }}' --admin_password='{{ wp_password }}'
    --admin_email='{{ wp_email }}'"
  args:
    chdir: "{{ wp_path }}"
  register: result
  changed_when: "'WordPress installed successfully.' in result.stdout"

- name: Install plugins.
  ansible.builtin.command: "{{ wpcli_path }} plugin install {{ item }} --activate"
  loop: "{{ wp_plugins }}"
  args:
    chdir: "{{ wp_path }}"
  register: result
  changed_when: "'Installed' in result.stdout"
